generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-arm64-openssl-1.1.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  user_id           String    @id @default(uuid())
  user_name         String    
  password          String
  random_parts_num  Int       @default(10)
  created_at        DateTime  @default(now())
  fortresses        Fortress[]
  markings          UserMarking[]
  governance        Governance?

  @@unique([user_name, password])
  @@map("users")
}

model Fortress {
  id          Int      @id @default(autoincrement())
  userId      String   @map("user_id")
  user        User     @relation(fields: [userId], references: [user_id])
  name        String   @map("completed_fortress")
  createdAt   DateTime @default(now()) @map("created_at")
  parts       Json     // パーツの配置情報（形状データを含む）を保存
  score       Int      @map("score")

  @@map("fortresses")
}

model UserMarking {
  id          Int      @id @default(autoincrement())
  userId      String   @map("user_id")
  user        User     @relation(fields: [userId], references: [user_id])
  x           Float
  y           Float
  region      String
  markType    String   @default("default") // "circle", "key", "square"のいずれか
  createdAt   DateTime @default(now()) @map("created_at")

  @@map("user_markings")
}

model Governance {
  id          String   @id @default(uuid())
  userId      String   @unique @map("user_id")
  user        User     @relation(fields: [userId], references: [user_id])
  kansai      Float    @default(0)
  chubu       Float    @default(0)
  kanto       Float    @default(0)
  tohoku      Float    @default(0)
  chugoku     Float    @default(0)
  shikoku     Float    @default(0)
  kyushu      Float    @default(0)
  total       Float    @default(0)
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@map("governances")
}
