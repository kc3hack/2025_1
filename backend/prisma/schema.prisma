generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-arm64-openssl-1.1.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  user_id           String    @id @default(uuid())
  user_name         String    
  password          String
  marking_point_x   Float     @default(0)
  marking_point_y   Float     @default(0)
  random_parts_num  Int       @default(10)
  created_at        DateTime  @default(now())
  parts             UserPart[]
  fortresses        Fortress[]

  @@unique([user_name, password])
  @@map("users")
}

model Part {
  id            Int       @id @default(autoincrement())
  shape         String
  materialId    Int       @map("material_id")
  material      Material  @relation(fields: [materialId], references: [id])
  userParts     UserPart[]

  @@map("parts")
}

model Material {
  id           Int     @id @default(autoincrement())
  name         String  @map("part_material")
  parts        Part[]

  @@map("materials")
}

model UserPart {
  id          Int      @id @default(autoincrement())
  userId      String   @map("user_id")
  user        User     @relation(fields: [userId], references: [user_id])
  partId      Int      @map("part_id")
  part        Part     @relation(fields: [partId], references: [id])
  domination  Float
  createdAt   DateTime @default(now())

  @@map("user_parts")
}

model Fortress {
  id          Int      @id @default(autoincrement())
  userId      String   @map("user_id")
  user        User     @relation(fields: [userId], references: [user_id])
  name        String   @map("completed_fortress")
  createdAt   DateTime @default(now()) @map("created_at")
  parts       Json     // パーツの配置情報（形状データを含む）を保存
  score       Int      @map("score")

  @@map("fortresses")
}
